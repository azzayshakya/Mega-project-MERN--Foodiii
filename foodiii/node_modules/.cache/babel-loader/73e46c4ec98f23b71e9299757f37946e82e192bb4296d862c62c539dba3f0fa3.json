{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AJAY\\\\Desktop\\\\Mega-project-MERN--Foodiii\\\\foodiii\\\\src\\\\Screens\\\\MyOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SingleOrder from './SingleOrder';\nimport Header from '../Component/Header';\nimport Css from '../Css/SingleOrder.css';\nimport background from \"../Images/collections-1.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrder = () => {\n  _s();\n  const [orderData, setOrderData] = useState([]); // Initialize with an empty object\n  // console.log(\"this is your data\")    \n  // console.log(orderData)\n\n  useEffect(() => {\n    const fetchMyOrder = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: localStorage.getItem('userEmail')\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          let array = data.orderdata.order_data;\n          array = array.reverse();\n          setOrderData(array);\n        } else {\n          // Handle non-successful response, e.g., show an error message\n          console.error(\"Request failed with status:\", response.status);\n        }\n      } catch (error) {\n        // Handle network or other errors\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchMyOrder();\n  }, []);\n\n  // return <div>\n\n  //     <div className='container'>\n  //         <div className='row'>\n  //             {orderData.length > 0 ? (\n  //                 orderData.map((data, index) => (\n  //                     <div key={index}>\n\n  //                         {data.Order_data ? (\n  //                             data.orderData.order_data\n  //                                 .slice(0)\n  //                                 .reverse()\n  //                                 .map((item, i) => (\n  //                                     <div key={i}>\n  //                                         {item.Order_date ? (\n  //                                             <div className='m-auto mt-5'>\n  //                                                 {/* Render Order Date */}\n  //                                             </div>\n  //                                         ) : (\n  //                                             <div className='col-12 col-md-6 col-lg-3'>\n  //                                                 <div className='card mt-3' style={{ width: '16rem', maxHeight: '360px' }}>\n  //                                                     <img src={item.img} className='card-img-top' alt='...' style={{ height: '120px', objectFit: 'fill' }} />\n  //                                                     <div className='card-body'>\n  //                                                         <h5 className='card-title'>{item.name}</h5>\n  //                                                         <div className='container w-100 p-0' style={{ height: '38px' }}>\n  //                                                             <span className='m-1'>{item.qty}</span>\n  //                                                             <span className='m-1'>{item.size}</span>\n  //                                                             <span className='m-1'>{item.Order_date}</span>\n  //                                                             <div className='d-inline ms-2 h-100 w-20 fs-5'>\n  //                                                                 â‚¹{item.price}/-\n  //                                                             </div>\n  //                                                         </div>\n  //                                                     </div>\n  //                                                 </div>\n  //                                             </div>\n  //                                         )}\n  //                                     </div>\n  //                                 ))\n  //                         ) : (\n  //                             ''\n  //                         )}\n  //                     </div>\n  //                 ))\n  //             ) : (\n  //                 // Handle the case when orderData is empty\n  //                 <div>No order data available.</div>\n  //             )}\n  //         </div>\n  //     </div>\n\n  //         </div>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"midpartoffoodpage myOrderDataPage\",\n      style: {\n        backgroundImage: `url(${background})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"yourorderheading\",\n        children: \"YOUR ORDER HISTORY..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"qwer\",\n        children:\n        /*#__PURE__*/\n        // orderData &&\n        _jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: orderData.map((items, index) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(SingleOrder, {\n                  items: items\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 11\n  }, this);\n};\n_s(MyOrder, \"omML5zCzVwkSAU9aQWI9BtEDc7s=\");\n_c = MyOrder;\nexport default MyOrder;\nvar _c;\n$RefreshReg$(_c, \"MyOrder\");","map":{"version":3,"names":["React","useEffect","useState","SingleOrder","Header","Css","background","jsxDEV","_jsxDEV","MyOrder","_s","orderData","setOrderData","fetchMyOrder","response","fetch","method","headers","body","JSON","stringify","email","localStorage","getItem","ok","data","json","array","orderdata","order_data","reverse","console","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundImage","map","items","index","_c","$RefreshReg$"],"sources":["C:/Users/AJAY/Desktop/Mega-project-MERN--Foodiii/foodiii/src/Screens/MyOrder.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nimport SingleOrder from './SingleOrder';\r\nimport Header from '../Component/Header';\r\nimport Css from '../Css/SingleOrder.css'\r\nimport background from \"../Images/collections-1.jpg\";\r\n\r\n\r\nconst MyOrder = () => {\r\n\r\n    \r\n    const [orderData, setOrderData] = useState([]); // Initialize with an empty object\r\n    // console.log(\"this is your data\")    \r\n    // console.log(orderData)\r\n      \r\n\r\n    useEffect(() => {\r\n        const fetchMyOrder = async () => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:5000/api/myOrderData\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: localStorage.getItem('userEmail')\r\n                    })\r\n                });\r\n        \r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    let array=data.orderdata.order_data\r\n                    array=array.reverse()\r\n                    setOrderData(array);\r\n                } else {\r\n                    // Handle non-successful response, e.g., show an error message\r\n                    console.error(\"Request failed with status:\", response.status);\r\n                }\r\n            } catch (error) {\r\n                // Handle network or other errors\r\n                console.error(\"Error:\", error);\r\n            }\r\n        };\r\n\r\n        fetchMyOrder();\r\n    }, []);\r\n    \r\n\r\n\r\n    // return <div>\r\n\r\n\r\n    //     <div className='container'>\r\n    //         <div className='row'>\r\n    //             {orderData.length > 0 ? (\r\n    //                 orderData.map((data, index) => (\r\n    //                     <div key={index}>\r\n                            \r\n    //                         {data.Order_data ? (\r\n    //                             data.orderData.order_data\r\n    //                                 .slice(0)\r\n    //                                 .reverse()\r\n    //                                 .map((item, i) => (\r\n    //                                     <div key={i}>\r\n    //                                         {item.Order_date ? (\r\n    //                                             <div className='m-auto mt-5'>\r\n    //                                                 {/* Render Order Date */}\r\n    //                                             </div>\r\n    //                                         ) : (\r\n    //                                             <div className='col-12 col-md-6 col-lg-3'>\r\n    //                                                 <div className='card mt-3' style={{ width: '16rem', maxHeight: '360px' }}>\r\n    //                                                     <img src={item.img} className='card-img-top' alt='...' style={{ height: '120px', objectFit: 'fill' }} />\r\n    //                                                     <div className='card-body'>\r\n    //                                                         <h5 className='card-title'>{item.name}</h5>\r\n    //                                                         <div className='container w-100 p-0' style={{ height: '38px' }}>\r\n    //                                                             <span className='m-1'>{item.qty}</span>\r\n    //                                                             <span className='m-1'>{item.size}</span>\r\n    //                                                             <span className='m-1'>{item.Order_date}</span>\r\n    //                                                             <div className='d-inline ms-2 h-100 w-20 fs-5'>\r\n    //                                                                 â‚¹{item.price}/-\r\n    //                                                             </div>\r\n    //                                                         </div>\r\n    //                                                     </div>\r\n    //                                                 </div>\r\n    //                                             </div>\r\n    //                                         )}\r\n    //                                     </div>\r\n    //                                 ))\r\n    //                         ) : (\r\n    //                             ''\r\n    //                         )}\r\n    //                     </div>\r\n    //                 ))\r\n    //             ) : (\r\n    //                 // Handle the case when orderData is empty\r\n    //                 <div>No order data available.</div>\r\n    //             )}\r\n    //         </div>\r\n    //     </div>\r\n        \r\n\r\n    //         </div>;\r\n\r\n\r\n   return(<div >\r\n\r\n    <Header/>\r\n    <div className=\"midpartoffoodpage myOrderDataPage\" style={{ backgroundImage: `url(${background})` }}>\r\n          <h3 className='yourorderheading'>YOUR ORDER HISTORY..</h3>\r\n    \r\n    <div className='qwer'>{\r\n        \r\n        // orderData &&\r\n        (\r\n            <div>\r\n\r\n\r\n    \r\n        <ul>{\r\n            orderData\r\n            \r\n            .map((items,index)=>{\r\n                \r\n                return <li  key={index}>                                                          \r\n                        <SingleOrder items={items}/>\r\n                                         \r\n                </li>\r\n            })\r\n        }\r\n        </ul>\r\n    </div>)\r\n}\r\n    \r\n    </div>\r\n    </div>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\n\r\nexport default MyOrder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}