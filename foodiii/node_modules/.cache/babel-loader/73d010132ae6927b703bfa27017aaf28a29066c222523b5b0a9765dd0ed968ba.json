{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Mega-project-MERN--Foodiii\\\\foodiii\\\\src\\\\Screens\\\\Foodcards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport css from '../Css/Foodcards.css';\nimport Footer from '../Component/Footer';\nimport Newcard from '../Component/Newcard';\nimport Header from '../Component/Header';\nimport background from \"../Images/zomatoHead.webp\";\nimport { Link } from 'react-router-dom';\nimport background2 from \"../Images/collections-1.jpg\";\nimport { responsiveFontSizes } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Foodcards = () => {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [foodCat, setfoodCat] = useState([]);\n  const [foodItems, setfoodItems] = useState([]);\n  const loadData = async () => {\n    let response = await fetch(\"http://localhost:5000/api/foodData\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    response = await response.json();\n    setfoodItems(response[0]);\n    setfoodCat(response[1]);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardspage\",\n      style: {\n        // backgroundImage: `url(${background2})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-place\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"HeaderSearchImg\",\n          src: \"../Images/search.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"HeaderSearchInput\",\n          placeholder: \"search for resturant,cuisine or a dish\",\n          value: search,\n          onChange: e => {\n            setSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container cardmain\",\n        children: foodCat !== [] ? foodCat.map(data => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mb-3 a1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fs-3 m-3 a2 \",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"CategoryName\",\n                children: data.CategoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)\n            }, data._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), foodItems !== [] ? foodItems.filter(item => item.CategoryName === data.CategoryName && item.name.toLowerCase().includes(search.toLocaleLowerCase())).map(filterItem => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12 col-md-6 col-lg-4 b1\",\n                children: /*#__PURE__*/_jsxDEV(Newcard, {\n                  foodItems: filterItem,\n                  options: filterItem.options[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 49\n                }, this)\n              }, filterItem._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 49\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"no data is found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\\" nodata\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Bfooter\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n_s(Foodcards, \"ZHoKo3Ru2XWzejXxDXdQ53g2x0Y=\");\n_c = Foodcards;\nexport default Foodcards;\nvar _c;\n$RefreshReg$(_c, \"Foodcards\");","map":{"version":3,"names":["React","useState","useEffect","css","Footer","Newcard","Header","background","Link","background2","responsiveFontSizes","jsxDEV","_jsxDEV","Foodcards","_s","search","setSearch","foodCat","setfoodCat","foodItems","setfoodItems","loadData","response","fetch","method","headers","json","children","className","style","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","map","data","CategoryName","_id","filter","item","name","toLowerCase","includes","toLocaleLowerCase","filterItem","options","_c","$RefreshReg$"],"sources":["D:/Github/Mega-project-MERN--Foodiii/foodiii/src/Screens/Foodcards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport css from '../Css/Foodcards.css'\r\nimport Footer from '../Component/Footer'\r\nimport Newcard from '../Component/Newcard';\r\nimport Header from '../Component/Header';\r\nimport background from \"../Images/zomatoHead.webp\";\r\nimport {Link} from 'react-router-dom'\r\nimport background2 from \"../Images/collections-1.jpg\";\r\nimport { responsiveFontSizes } from '@mui/material';\r\n\r\n\r\n\r\n\r\n\r\nconst Foodcards = () => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [foodCat, setfoodCat] = useState([]);\r\n    const [foodItems, setfoodItems] = useState([]);\r\n\r\n\r\n    const loadData = async () => {\r\n        let response = await fetch(\"http://localhost:5000/api/foodData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        response = await response.json();\r\n\r\n        setfoodItems(response[0])\r\n        setfoodCat(response[1])\r\n    }\r\n    useEffect(() => {\r\n        loadData();\r\n    }, [])\r\n\r\n\r\n    return  <div>\r\n        <div className=\"cardspage\" style={{ \r\n            // backgroundImage: `url(${background2})`\r\n             }}>\r\n            <Header/>\r\n\r\n<div className=\"search-place\">\r\n                  \r\n         <img className=\"HeaderSearchImg\" src=\"../Images/search.png\" alt=\"\"/>\r\n         <input type=\"search\" className='HeaderSearchInput'  placeholder=\"search for resturant,cuisine or a dish\" value={search} onChange={(e)=>{setSearch(e.target.value)}}/>     \r\n            \r\n  </div>\r\n       \r\n        <div className=\"container cardmain\"> \r\n            {\r\n                foodCat !== []\r\n                    ? foodCat.map((data) => {\r\n                        return (\r\n                            <div className='row mb-3 a1' >\r\n                                <div key={data._id} className='fs-3 m-3 a2 ' >\r\n                                    <div className=\"CategoryName\">\r\n                                    {data.CategoryName}\r\n\r\n                                    </div>\r\n                                    \r\n                                  \r\n\r\n                                </div>\r\n                                {/* <hr /> */}\r\n\r\n                               \r\n                                {\r\n                                    foodItems !== []\r\n                                        ? foodItems.filter((item) => (item.CategoryName === data.CategoryName) && (item.name.toLowerCase().includes(search.toLocaleLowerCase())))\r\n                                        .map(filterItem => {\r\n                                            return (\r\n\r\n                                            \r\n                                                <div key={filterItem._id} className='col-12 col-md-6 col-lg-4 b1'>\r\n                                                \r\n                                                <Newcard foodItems={filterItem}\r\n                                                options={filterItem.options[0]}\r\n                                                >                                                \r\n                                                </Newcard>         \r\n                                                </div>\r\n\r\n                                            )\r\n\r\n                                        })\r\n                                     : <div>no data is found</div>\r\n                                        \r\n\r\n                                    }\r\n\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                    : <div>\" nodata\"</div>\r\n\r\n            }\r\n             </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"Bfooter\">\r\n            <Footer />       \r\n        </div>\r\n\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Foodcards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}